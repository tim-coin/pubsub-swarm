'use strict'
var crypto = require('crypto')

var asn1 = require('asn1.js');
var BN = require('bn.js');

function toOIDArray(oid) {
  return oid.split('.').map(function(s) {
    return parseInt(s, 10)
  });
}

// Define ECPrivateKey from RFC 5915
var ECPrivateKey = asn1.define('ECPrivateKey', function() {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').explicit(0).objid().optional(),
    this.key('publicKey').explicit(1).bitstr().optional()
  );
});

// Generate the DH keys
var ecdh = crypto.createECDH('secp256k1');
ecdh.generateKeys();

// Generate the PEM-encoded private key
var pemKey = ECPrivateKey.encode({
  version: new BN(1),
  privateKey: ecdh.getPrivateKey(),
  // OID for brainpoolP512t1
  parameters: toOIDArray('1.3.36.3.3.2.8.1.1.14')
}, 'pem', { label: 'EC PRIVATE KEY' });


function topempub(key){
  // https://stackoverflow.com/questions/39696888/unable-to-sign-a-file-with-nodejs-crypto
  var ECPublicKey = asn1.define('ECPublicKey', function() {
    this.seq().obj(
      this.key('version').int(),
      this.key('publicKey').octstr(),
      this.key('parameters').explicit(0).objid().optional(),
      this.key('privateKey').explicit(1).bitstr().optional()
    );
  });
  return ECPublicKey.encode({
    version: new BN(1),
    publicKey: key,
    // OID for brainpoolP512t1
    parameters: toOIDArray('1.3.36.3.3.2.8.1.1.14')
  }, 'pem', { label: 'EC PUBLIC KEY' });
}


function topem(key){
  var ECPrivateKey = asn1.define('ECPrivateKey', function() {
    this.seq().obj(
      this.key('version').int(),
      this.key('privateKey').octstr(),
      this.key('parameters').explicit(0).objid().optional(),
      this.key('publicKey').explicit(1).bitstr().optional()
    );
  });
  return ECPrivateKey.encode({
    version: new BN(1),
    privateKey: key,
    // OID for brainpoolP512t1
    parameters: toOIDArray('1.3.36.3.3.2.8.1.1.14')
  }, 'pem', { label: 'EC PRIVATE KEY' });
}
// Sign data
var sign = crypto.createSign('sha512');
sign.update('hello world');
var signature = sign.sign(topem("AVNRcffpizbB02udG0jCKzYD+0uWXtL/d3FC+FiITk+Ryxusi8lwKT1Kge7gICMKBdUH3W98bZoR6/uyPoXiN3O6"), 'hex');
console.log(">", signature)

var verify = crypto.createVerify('sha512')
verify.update('hello world')
console.log(verify(topempub()))
