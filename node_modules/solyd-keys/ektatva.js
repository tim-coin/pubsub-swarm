'use strict'
var crypto = require('crypto')
var asn1 = require('asn1.js')
var BN = require('bn.js')
var KeyEncoder = require('key-encoder')

function keypair(seed){
  var alice = crypto.createECDH('secp256k1')
  alice.generateKeys()
  return alice
}


function unTag (string) {
  var i = string.split('.')
//  console.log("A: ", i)
  //var curve =  string.substring(i+1)
  return i[0]
}

module.exports = {

  curves: ['secp256k1'],

  generate: function (seed) {
    if(!seed) crypto.randomBytes(32)

    var keys = keypair(seed)
    //console.log("KT: ", keys.getPrivateKey('base64') , keys.getPrivateKey().length)
    return {
      curve: 'secp256k1',
      public: keys.getPublicKey('hex'),
      private: keys.getPrivateKey('base64')
    }
  },

  sign: function (privateKey, message) {
    //console.log("T1: ", unTag(privateKey), topempvt(unTag(privateKey)) )
    var encoder = new KeyEncoder('secp256k1')
    var pvtPEM = encoder.encodePrivate(Buffer(unTag(privateKey), "base64").toString('hex') , 'raw', 'pem')
    return crypto.createSign('sha256').update(message).sign(pvtPEM, 'hex')
    //return sign.sign(topempvt(unTag(privateKey)), 'base64');

    //return crypto.privateEncrypt(topempvt(unTag(privateKey)),Buffer(message, 'utf-8'))
  },

  verify: function (publicKey, sig, message) {
    //console.log("T2: ", unTag(publicKey).length)
    var encoder = new KeyEncoder('secp256k1')
    var pubPEM = encoder.encodePublic(unTag(publicKey), 'raw', 'pem')
    return crypto.createVerify('sha256').update(message).verify(pubPEM, sig, 'hex')
  }


}


function toOIDArray(oid) {
  return oid.split('.').map(function(s) {
    return parseInt(s, 10)
  });
}

function topempub(key){
  // https://stackoverflow.com/questions/39696888/unable-to-sign-a-file-with-nodejs-crypto
  var ECPublicKey = asn1.define('ECPublicKey', function() {
    this.seq().obj(
      this.key('version').int(),
      this.key('publicKey').octstr(),
      this.key('parameters').explicit(0).objid().optional(),
      this.key('privateKey').explicit(1).bitstr().optional()
    );
  });
  return ECPublicKey.encode({
    version: new BN(1),
    publicKey: key,
    // OID for brainpoolP512t1
    parameters: toOIDArray('1.3.36.3.3.2.8.1.1.14')
  }, 'pem', { label: 'EC PUBLIC KEY' });
}

function topempvt(key){
  // https://stackoverflow.com/questions/39696888/unable-to-sign-a-file-with-nodejs-crypto
  var ECPrivateKey = asn1.define('ECPrivateKey', function() {
    this.seq().obj(
      this.key('version').int(),
      this.key('privateKey').octstr(),
      this.key('parameters').explicit(0).objid().optional(),
      this.key('publicKey').explicit(1).bitstr().optional()
    );
  });
  return ECPrivateKey.encode({
    version: new BN(1),
    privateKey: key,
    // OID for brainpoolP512t1
    parameters: toOIDArray('1.3.36.3.3.2.8.1.1.14')
  }, 'pem', { label: 'EC PRIVATE KEY' });
}
